version: "3"
services:
    nginx:
        image: nginx:stable
        container_name: nginx
        ports:
          - "80:80"
        environment:
          TZ: Asia/Tokyo
          FRONTEND_BASE_ORIGIN: "http://frontend:3000"
          API_BASE_ORIGIN: "http://host.docker.internal:8080"
          API_BASE_PATH: "/api"
        volumes:
          - ./docker/nginx/conf.d/default.conf.template:/etc/nginx/conf.d/default.conf.template
        depends_on:
          - frontend
        command: /bin/sh -c "envsubst '$$FRONTEND_BASE_ORIGIN$$API_BASE_ORIGIN$$API_BASE_PATH' < /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

    frontend:
        container_name: frontend
        build: ./frontend
        command: yarn dev
        volumes:
          - ./frontend:/app/frontend
        ports:
          - "3000:3000"
        depends_on:
            - backend
        tty: true

    backend:
        container_name: backend
        build: ./backend
        command: yarn start:dev
        volumes:
            - ./backend:/app/backend
        ports:
            - "8080:8080"
        depends_on:
            - db
        tty: true 
        
    db:
        image: postgres:11.5
        container_name: postgres
        volumes:
            - ./docker/postgres:/var/lib/postgresql/data
        ports:
            - "5432:5432"
        environment:
            # POSTGRES_USER: postgres
            POSTGRES_PASSWORD: password
            POSTGRES_DB: test
            TZ: "Asia/Tokyo"
        hostname: postgres

    pgadmin4:
        image: dpage/pgadmin4:4.2
        container_name: pgadmin4
        ports:
            - 8000:80
        volumes:
            - ./docker/pgadmin4:/var/lib/pgadmin
        environment:
            PGADMIN_DEFAULT_EMAIL: admin
            PGADMIN_DEFAULT_PASSWORD: password
        depends_on:
            - db
        hostname: pgadmin4
        restart: always